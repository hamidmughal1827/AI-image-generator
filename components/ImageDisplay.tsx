
import React from 'react';
import { ImageIcon } from './icons/ImageIcon';

interface ImageDisplayProps {
  imageUrl: string | null;
  isLoading: boolean;
  error: string | null;
}

export const ImageDisplay: React.FC<ImageDisplayProps> = ({ imageUrl, isLoading, error }) => {
  const Placeholder = () => (
    <div className="w-full h-full flex flex-col items-center justify-center text-center p-8 bg-slate-800/50 border-2 border-dashed border-slate-600 rounded-lg">
      <ImageIcon className="w-16 h-16 text-slate-500 mb-4" />
      <h3 className="text-xl font-semibold text-slate-300">Your generated image will appear here</h3>
      <p className="text-slate-400 mt-2">Enter a prompt and click "Generate" to see the magic happen.</p>
    </div>
  );

  const LoadingSkeleton = () => (
    <div className="w-full h-full bg-slate-800/50 border border-slate-700 rounded-lg p-4 animate-pulse">
      <div className="w-full h-full bg-slate-700 rounded-md"></div>
    </div>
  );
  
  const ErrorDisplay = () => (
    <div className="w-full h-full flex flex-col items-center justify-center text-center p-8 bg-red-900/20 border-2 border-red-500/50 rounded-lg">
        <svg xmlns="http://www.w3.org/2000/svg" className="h-12 w-12 text-red-400 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h3 className="text-xl font-semibold text-red-300">An Error Occurred</h3>
        <p className="text-red-400 mt-2 max-w-md">{error}</p>
    </div>
  );

  return (
    <div className="w-full max-w-lg aspect-square">
      {isLoading ? (
        <LoadingSkeleton />
      ) : error ? (
        <ErrorDisplay />
      ) : imageUrl ? (
        <img
          src={imageUrl}
          alt="Generated by AI"
          className="w-full h-full object-cover rounded-lg shadow-2xl border-2 border-slate-700"
        />
      ) : (
        <Placeholder />
      )}
    </div>
  );
};
